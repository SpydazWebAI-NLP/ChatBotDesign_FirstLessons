<?xml version="1.0"?>
<doc>
<assembly>
<name>
ArtificialIntelligence
</name>
</assembly>
<members>
<member name="M:Artificial_Intelligence.Frm_AI.Frm_AI_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 This samples solves the problem for the borderless form not being moveable.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Artificial_Intelligence.Frm_AI.Frm_AI_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 This samples solves the problem for the borderless form not being moveable.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Artificial_Intelligence.Frm_AI.ProcessInputText(System.String)">
	<summary>
 handles the various inputs
 </summary>
	<param name="NewText"></param>
	<remarks></remarks>
</member><member name="M:Artificial_Intelligence.Frm_AI.ProcessOutputText(System.String)">
	<summary>
 used to process the output text
 </summary>
	<param name="NewText"></param>
	<remarks></remarks>
</member><member name="M:Artificial_Intelligence.Frm_AI.GetUserInput">
	<summary>
 called to retrieve the user input from the text box
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Artificial_Intelligence.Frm_AI.SetOutputText(System.String)">
	<summary>
 called when the response has been found
 </summary>
	<param name="NewText"></param>
	<remarks></remarks>
</member><member name="M:Artificial_Intelligence.Frm_AI.Frm_AI_Load(System.Object,System.EventArgs)">
	<summary>
 called when the project loads
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="F:Artificial_Intelligence.Frm_AI.RecoEngine">
	<summary>
 enables voice recognition engine
 </summary>
	<remarks></remarks>
</member><member name="F:Artificial_Intelligence.Frm_AI.SpeechSynth">
	<summary>
 Enable TexttoSpeech
 </summary>
	<remarks></remarks>
</member><member name="M:Artificial_Intelligence.Frm_AI.SetupRecognition">
	<summary>
 Sets up Speech Recognition for use
 </summary>
	<remarks></remarks>
</member><member name="M:Artificial_Intelligence.Frm_AI.RecoEngine_RecognizeCompleted(System.Object,System.Speech.Recognition.RecognizeCompletedEventArgs)">
	<summary>
 Activated on completion of recognition
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Artificial_Intelligence.Frm_AI.RecoEngine_SpeechRecognized(System.Object,System.Speech.Recognition.RecognitionEventArgs)">
	<summary>
 On recogonizing speech the input is sent to the response routine
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Artificial_Intelligence.Frm_AI.SpeakText(System.String@)">
	<summary>
 Speaktext Uses the internal speech system to speak the text, using the SAPI
 </summary>
	<param name="NewText">String: Text to be spoken</param>
	<remarks></remarks>
</member><member name="P:Artificial_Intelligence.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Artificial_Intelligence.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="P:Artificial_Intelligence.My.Resources.Resources.interface_1g">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Artificial_Intelligence.My.Resources.Resources.interface_1g1">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="T:Artificial_Intelligence.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="T:Artificial_Intelligence.QADataSet._QA_MINDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Artificial_Intelligence.QADataSet._QA_MINDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Artificial_Intelligence.QADataSet._QA_MINDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Artificial_Intelligence.QADataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:Artificial_Intelligence.QADataSetTableAdapters.QA_MINDTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="M:Artificial_Intelligence.QADataSetTableAdapters.TableAdapterManager.UpdateUpdatedRows(Artificial_Intelligence.QADataSet,System.Collections.Generic.List{System.Data.DataRow},System.Collections.Generic.List{System.Data.DataRow})">
	<summary>
Update rows in top-down order.
</summary>
</member><member name="M:Artificial_Intelligence.QADataSetTableAdapters.TableAdapterManager.UpdateInsertedRows(Artificial_Intelligence.QADataSet,System.Collections.Generic.List{System.Data.DataRow})">
	<summary>
Insert rows in top-down order.
</summary>
</member><member name="M:Artificial_Intelligence.QADataSetTableAdapters.TableAdapterManager.UpdateDeletedRows(Artificial_Intelligence.QADataSet,System.Collections.Generic.List{System.Data.DataRow})">
	<summary>
Delete rows in bottom-up order.
</summary>
</member><member name="M:Artificial_Intelligence.QADataSetTableAdapters.TableAdapterManager.GetRealUpdatedRows(System.Data.DataRow[],System.Collections.Generic.List{System.Data.DataRow})">
	<summary>
Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
</summary>
</member><member name="M:Artificial_Intelligence.QADataSetTableAdapters.TableAdapterManager.UpdateAll(Artificial_Intelligence.QADataSet)">
	<summary>
Update all changes to the dataset.
</summary>
</member><member name="T:Artificial_Intelligence.QADataSetTableAdapters.TableAdapterManager.UpdateOrderOption">
	<summary>
Update Order Option
</summary>
</member><member name="T:Artificial_Intelligence.QADataSetTableAdapters.TableAdapterManager.SelfReferenceComparer">
	<summary>
Used to sort self-referenced table's rows
</summary>
</member><member name="T:Artificial_Intelligence.QADataSetTableAdapters.TableAdapterManager">
	<summary>
TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
</summary>
</member><member name="M:Artificial_Intelligence.Response.GetResponse(System.String)">
	<summary>
 Main Response, this also executes all subsequent plugins
 </summary>
	<param name="Userinput"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Artificial_Intelligence.PluginHost.Response">
	<summary>
 response held in the class
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Artificial_Intelligence.PluginHost.ExecutePlugin(System.String)">
	<summary>
 Executes plugins in folder \plugins, adds subsequent responses to response
 </summary>
	<param name="_UserInput"></param>
	<remarks></remarks>
</member><member name="M:Artificial_Intelligence.PluginHost.SetResponse(System.String)">
	<summary>
 hee responses are chained together
 </summary>
	<param name="Response"></param>
	<remarks></remarks>
</member><member name="M:Artificial_Intelligence.PluginHost.Execute(System.String)">
	<summary>
 executes all plugins returning the chained response
 </summary>
	<param name="_UserInput"></param>
	<returns>response string</returns>
	<remarks></remarks>
</member><member name="M:Artificial_Intelligence.PluginLoader.LoadPlugins(System.String)">
	<summary>
 searches the given path for assemblies of type dll, and Iplugin(interface to be used for all plugins)
 </summary>
	<param name="path"></param>
	<returns>Collection of plugin objects</returns>
	<remarks></remarks>
</member>
</members>
</doc>